[GLOBAL]
pants_version = "2.14.0"
backend_packages = [
    "pants.backend.build_files.fmt.black",
    "pants.backend.experimental.python.lint.autoflake",
    "pants.backend.python",
    "pants.backend.python.lint.bandit",
    "pants.backend.python.lint.black",
    "pants.backend.python.lint.docformatter",
    "pants.backend.python.lint.flake8",
    "pants.backend.python.lint.isort",
    "pants.backend.python.typecheck.mypy",
]

[anonymous-telemetry]
enabled = false

[autoflake]
version = "autoflake==1.7.7"
lockfile = "vendor/lock/autoflake.txt"
args = ["--remove-all-unused-imports", "--remove-unused-variables"]

[bandit]
version = "bandit==1.7.4"
config = "vendor/bandit.yml"
args = ["--silent"]
lockfile = "vendor/lock/bandit.txt"

[black]
version = "black==22.10.0"
config = "vendor/pyproject.toml"
lockfile = "vendor/lock/black.txt"
interpreter_constraints = ["CPython==3.11.*"]

[coverage-py]
interpreter_constraints = ["CPython==3.11.*"]
report = [
    "console",
    "html",
]

[docformatter]
version = "docformatter==1.5"
lockfile = "vendor/lock/docformatter.txt"
args = ["--wrap-summaries", "87", "--wrap-descriptions", "80"]
interpreter_constraints = ["CPython==3.11.*"]

[flake8]
version = "flake8==4.0.1"
config = "vendor/setup.cfg"
lockfile = "vendor/lock/flake8.txt"
extra_requirements = [
    "flake8-annotations",
    "flake8-builtins",
    "flake8-executable",
    "flake8-if-expr",
    "flake8-logging-format",
    "flake8-pie",
    "flake8-print",
    "flake8-simplify",
    "flake8-tidy-imports",
    "setuptools",
    "wemake-python-styleguide",
]

[isort]
version = "isort==5.10.1"
config = "vendor/setup.cfg"
lockfile = "vendor/lock/isort.txt"
interpreter_constraints = ["CPython==3.11.*"]

[mypy]
version = "mypy==0.990"
config = "vendor/setup.cfg"
lockfile = "vendor/lock/mypy.txt"
interpreter_constraints = ["CPython==3.11.*"]
extra_requirements = ["grpc-stubs"]

[pytest]
version = "pytest==7.2.0"
lockfile = "vendor/lock/pytest.txt"
extra_requirements = [
    "pytest-cov",
    "pytest-icdiff",
    "pygments",
]

[python]
interpreter_constraints = ["CPython==3.11.*"]
enable_resolves = true
resolves = {python-default = "vendor/lock/constraints.txt"}

[source]
root_patterns = [
    "/python",
]

[test]
use_coverage = true
