[GLOBAL]
pants_version = "2.20.0.dev0"
backend_packages = [
  "pants.backend.build_files.fmt.black",
  "pants.backend.experimental.python.lint.add_trailing_comma",
  "pants.backend.experimental.python.lint.ruff",
  "pants.backend.experimental.tools.yamllint",
  "pants.backend.python",
  "pants.backend.python.lint.autoflake",
  "pants.backend.python.lint.docformatter",
  "pants.backend.python.typecheck.mypy",
]

[add-trailing-comma]
requirements = ["add-trailing-comma"]
install_from_resolve = "python-default"
interpreter_constraints = ["CPython==3.11.*"]

[anonymous-telemetry]
enabled = false

[autoflake]
requirements = ["autoflake"]
install_from_resolve = "python-default"
interpreter_constraints = ["CPython==3.11.*"]
args = ["--remove-all-unused-imports", "--remove-unused-variables"]

[black]
requirements = ["black"]
config = "vendor/pyproject.toml"
install_from_resolve = "python-default"
interpreter_constraints = ["CPython==3.11.*"]

[coverage-py]
requirements = ["coverage"]
install_from_resolve = "python-default"
interpreter_constraints = ["CPython==3.11.*"]
config = "vendor/pyproject.toml"
report = ["console", "html"]


[docformatter]
requirements = ["docformatter"]
install_from_resolve = "python-default"
args = ["--wrap-summaries", "87", "--wrap-descriptions", "80"]
interpreter_constraints = ["CPython==3.11.*"]

[generate-lockfiles]
diff = true

[mypy]
requirements = ["mypy"]
config = "vendor/pyproject.toml"
install_from_resolve = "python-default"
interpreter_constraints = ["CPython==3.11.*"]

[pytest]
requirements = [
  "pytest",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-icdiff",
  "pytest-mock",
  "pytest-xdist",
]
config = "vendor/pyproject.toml"
install_from_resolve = "python-default"
xdist_enabled = true

[python]
interpreter_constraints = ["CPython==3.11.*"]
enable_resolves = true
tailor_pex_binary_targets = false
resolves = { python-default = "vendor/constraints.txt" }
pip_version = "latest"

[python-infer]
unowned_dependency_behavior = "error"
use_rust_parser = true

[ruff]
config = "vendor/pyproject.toml"
install_from_resolve = "python-default"

[setuptools]
install_from_resolve = "python-default"

[source]
root_patterns = [
    "/python",
]

[yamllint]
include = "+['.yamllint']"
